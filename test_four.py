import pytest

@pytest.fixture()
def some_data():
    """Return answer to ultimate question."""
    return 42


def test_some_data(some_data):
    """Use fixture return value in a test."""
    assert some_data == 42


"""
Декоратор @pytest.fixture() используется, чтобы сообщить pytest, 
что функция является фикстурой. 
Когда вы включаете имя фикстуры в список параметров тестовой функции, 
pytest знает, как запустить её перед запуском теста. 
Фикстуры могут выполнять работу, а могут возвращать данные в тестовую функцию.
Тест test_some_data() имеет в качестве параметра имя фикстуры some_data. 
pytest определит это и найдет фикстуру с таким названием. 
Наименование значимо в pytest. pytest будет искать в модуле теста фикстуру 
с таким именем. Он также будет искать в файле conftest.py, 
если не найдет его в этом.
Прежде чем мы начнем наше исследование фикстур (и файла conftest.py), 
мне нужно рассмотреть тот факт, что термин fixture имеет много значений 
в сообществе программирования и тестирования и даже в сообществе Python. 
Я использую fixture, fixture function, и fixture method взаимозаменяемо, 
чтобы ссылаться на функции @pytest.fixture(), описанные в этой главе. 
Фикстура также может использоваться для обозначения ресурса, 
который ссылается функцией фикстуры. Функции Fixture 
часто настраивают или извлекают некоторые данные, с которыми может работать тест. 
Иногда эти данные считаются фикстурой. Например, сообщество Django часто 
использует фикстуру для обозначения некоторых исходных данных, 
которые загружаются в базу данных в начале приложения.
Независимо от других смысловых значений, 
в pytest и в этой книге test fixtures относятся к механизму, 
который обеспечивает pytest, чтобы отделить код “подготовка к 
(getting ready for)”
 и “очистка после (cleaning up after)” от ваших тестовых функций.

"""